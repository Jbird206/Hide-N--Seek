{"version":3,"sources":["assets/giraffe.jpg","assets/hippo.png","assets/frog.png","assets/alligator.png","assets/elephant.png","assets/hedgehog.png","assets/kangaroo.png","assets/lion.png","assets/monkey.png","assets/owl.png","assets/pandabear.png","assets/parrot.png","assets/rabbit.png","assets/snake.png","assets/tiger.png","components/header.js","components/Image.js","components/ImageList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Header","props","style","backgroundColor","fontFamily","padding","margin","marginLeft","marginRight","boxShadow","borderRadius","textAlign","border","borderWidth","borderColor","FlashCard","state","flipped","onClick","flip","Card","width","overflow","marginTop","marginBottom","height","justifyContent","transform","this","Img","variant","src","front","back","setState","React","Component","masterImgList","id","giraffe","hippo","frog","alligator","elephant","hedgehog","kangaroo","lion","monkey","owl","pandabear","parrot","rabbit","snake","tiger","ImageList","Fragment","CardDeck","map","image","index","key","App","className","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"4GAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,iC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,qJCoC5BC,MAzBf,SAAgBC,GAgBd,OACE,yBAAKC,MAhByB,CAC9BC,gBAAiB,UACjBC,WAAY,aACZC,QAAS,OACTC,OAAQ,OACRC,WAAY,GACZC,YAAa,GACbC,UAAW,eACXC,aAAc,GACdC,UAAW,SACXC,OAAQ,iBACZC,YAAa,EACbC,YAAa,SAKP,4DACD,yE,8CCkCUC,E,kDA1Db,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IACDe,MAAQ,CACXC,SAAS,GAHM,E,qDAMT,IAAD,OAEP,OACE,yBAAKC,QAFa,kBAAM,EAAKC,SAG3B,kBAACC,EAAA,EAAD,CACElB,MAAO,CACLmB,MAAO,QACPC,SAAU,SACVZ,aAAc,OACda,UAAW,OACXd,UAAW,eACXN,gBAAiB,qBACjBS,OAAQ,iBACRC,YAAa,MACbW,aAAc,OACdC,OAAQ,QACRd,UAAW,SACXe,eAAgB,SAChBC,UAAW,uFAGXC,KAAKZ,MAAMC,SACX,kBAACG,EAAA,EAAKS,IAAN,CACEC,QAAQ,MAIRC,IAAKH,KAAK3B,MAAM+B,QAGnBJ,KAAKZ,MAAMC,SACV,4BACE,4BAAKW,KAAK3B,MAAMgC,W,6BAS1BL,KAAKM,SAAS,CACZjB,SAAUW,KAAKZ,MAAMC,c,GAjDHkB,IAAMC,W,uQCgBxBC,G,MAAgB,CACpB,CACEC,GAAI,EACJN,MAAOO,IACPN,KAAM,WAER,CACEK,GAAI,EACJN,MAAOQ,IACPP,KAAM,SAER,CACEK,GAAI,EACJN,MAAOS,IACPR,KAAM,QAER,CACEK,GAAI,EACJN,MAAOU,IACPT,KAAM,aAER,CACEK,GAAI,EACJN,MAAOW,IACPV,KAAM,YAER,CACEK,GAAI,EACJN,MAAOY,IACPX,KAAM,YAER,CACEK,GAAI,EACJN,MAAOa,IACPZ,KAAM,YAER,CACEK,GAAI,EACJN,MAAOc,IACPb,KAAM,QAER,CACEK,GAAI,EACJN,MAAOe,IACPd,KAAM,UAER,CACEK,GAAI,GACJN,MAAOgB,IACPf,KAAM,OAER,CACEK,GAAI,GACJN,MAAOiB,IACPhB,KAAM,cAER,CACEK,GAAI,GACJN,MAAOkB,IACPjB,KAAM,UAER,CACEK,GAAI,GACJN,MAAOmB,IACPlB,KAAM,UAER,CACEK,GAAI,GACJN,MAAOoB,IACPnB,KAAM,SAER,CACEK,GAAI,GACJN,MAAOqB,IACPpB,KAAM,WAgBKqB,MAZf,WACE,OACE,kBAAC,IAAMC,SAAP,KACE,kBAACC,EAAA,EAAD,KACGnB,EAAcoB,KAAI,SAACC,EAAOC,GAAR,OACjB,kBAAC,EAAD,CAAW3B,MAAO0B,EAAM1B,MAAOC,KAAMyB,EAAMzB,KAAM2B,IAAKD,UCjFjDE,MAZf,WACE,OACE,kBAAC,IAAMN,SAAP,KACE,yBAAKO,UAAU,aACb,kBAAC,EAAD,MAEA,kBAAC,EAAD,SCLYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2D,MCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.4b78868f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/giraffe.92e30466.jpg\";","module.exports = __webpack_public_path__ + \"static/media/hippo.2dc7f20a.png\";","module.exports = __webpack_public_path__ + \"static/media/frog.c5c681d0.png\";","module.exports = __webpack_public_path__ + \"static/media/alligator.ae959a2b.png\";","module.exports = __webpack_public_path__ + \"static/media/elephant.0fc83bda.png\";","module.exports = __webpack_public_path__ + \"static/media/hedgehog.84089516.png\";","module.exports = __webpack_public_path__ + \"static/media/kangaroo.954492fe.png\";","module.exports = __webpack_public_path__ + \"static/media/lion.e2eb7f1c.png\";","module.exports = __webpack_public_path__ + \"static/media/monkey.7aaef966.png\";","module.exports = __webpack_public_path__ + \"static/media/owl.b059810b.png\";","module.exports = __webpack_public_path__ + \"static/media/pandabear.50e54265.png\";","module.exports = __webpack_public_path__ + \"static/media/parrot.a8908f72.png\";","module.exports = __webpack_public_path__ + \"static/media/rabbit.d8f4631e.png\";","module.exports = __webpack_public_path__ + \"static/media/snake.3095968e.png\";","module.exports = __webpack_public_path__ + \"static/media/tiger.27bb20d3.png\";","// import React from \"react\";\n\n// function Header() {\n//   return <h1>Lets Play Hide and Seek</h1>;\n// }\n\n// export default Header;\n\n\nimport React from 'react';\n\nfunction Header(props) {\n  const myStyledComponentStyles = {\n    backgroundColor: '#ffcc00',\n    fontFamily: 'sans-serif',\n    padding: '50px',\n    margin: '50px',\n    marginLeft: 50,\n    marginRight: 50,\n    boxShadow: '5px 5px 15px',\n    borderRadius: 50,\n    textAlign: 'center',\n    border: '1px solid cyan',\nborderWidth: 2,\nborderColor: 'cyan'\n    \n  }\n  return (\n    <div style={myStyledComponentStyles}>\n      <h1>Hey, Let's Play Hide n' Seek</h1>\n     <p>Click on the image to reveal their name.</p>\n    </div>\n    \n  );\n}\n\nexport default Header;","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Card } from \"react-bootstrap\";\n\n\nclass FlashCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      flipped: false,\n    };\n  }\n  render() {\n    const handleClick = () => this.flip();\n    return (\n      <div onClick={handleClick}>\n        <Card\n          style={{\n            width: \"18rem\",\n            overflow: \"hidden\",\n            borderRadius: \"15px\",\n            marginTop: \"15px\",\n            boxShadow: \"5px 5px 20px\",\n            backgroundColor: \"rgb(228, 227, 181)\",\n            border: \"2px solid cyan\",\n            borderWidth: \"2px\",\n            marginBottom: \"15px\",\n            height: \"28rem\",\n            textAlign: \"center\",\n            justifyContent: \"center\",\n            transform: \"perspective(1000px) rotateY(var(--rotate-y, 0)) translateY(var(--translate-y, 0))\",\n          }}\n        >\n          {!this.state.flipped && (\n            <Card.Img\n              variant=\"top\"\n              // style={{\n              //   height: \"28rem\",\n              // }}\n              src={this.props.front}\n            />\n          )}\n          {this.state.flipped && (\n            <h2>\n              <em>{this.props.back}</em>\n            </h2>\n          )}\n        </Card>\n      </div>\n    );\n  }\n\n  flip() {\n    this.setState({\n      flipped: !this.state.flipped,\n    });\n  }\n}\n\nFlashCard.propTypes = {\n  front: PropTypes.string,\n  back: PropTypes.string,\n};\n\nexport default FlashCard;\n","import React from \"react\";\nimport FlashCard from \"./Image\";\nimport giraffe from \"../assets/giraffe.jpg\";\nimport hippo from \"../assets/hippo.png\";\nimport frog from \"../assets/frog.png\";\nimport alligator from \"../assets/alligator.png\";\nimport elephant from \"../assets/elephant.png\";\nimport hedgehog from \"../assets/hedgehog.png\";\nimport kangaroo from \"../assets/kangaroo.png\";\nimport lion from \"../assets/lion.png\";\nimport monkey from \"../assets/monkey.png\";\nimport owl from \"../assets/owl.png\";\nimport pandabear from \"../assets/pandabear.png\";\nimport parrot from \"../assets/parrot.png\";\nimport rabbit from \"../assets/rabbit.png\";\nimport snake from \"../assets/snake.png\";\nimport tiger from \"../assets/tiger.png\";\n\nimport { CardDeck } from \"react-bootstrap\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nconst masterImgList = [\n  {\n    id: 1,\n    front: giraffe,\n    back: \"Giraffe\",\n  },\n  {\n    id: 2,\n    front: hippo,\n    back: \"Hippo\",\n  },\n  {\n    id: 3,\n    front: frog,\n    back: \"Frog\",\n  },\n  {\n    id: 4,\n    front: alligator,\n    back: \"Alligator\",\n  },\n  {\n    id: 5,\n    front: elephant,\n    back: \"Elephant\",\n  },\n  {\n    id: 6,\n    front: hedgehog,\n    back: \"Hedgehog\",\n  },\n  {\n    id: 7,\n    front: kangaroo,\n    back: \"Kangaroo\",\n  },\n  {\n    id: 8,\n    front: lion,\n    back: \"Lion\",\n  },\n  {\n    id: 9,\n    front: monkey,\n    back: \"Monkey\",\n  },\n  {\n    id: 10,\n    front: owl,\n    back: \"Owl\",\n  },\n  {\n    id: 11,\n    front: pandabear,\n    back: \"Panda Bear\",\n  },\n  {\n    id: 12,\n    front: parrot,\n    back: \"Parrot\",\n  },\n  {\n    id: 13,\n    front: rabbit,\n    back: \"Rabbit\",\n  },\n  {\n    id: 14,\n    front: snake,\n    back: \"Snake\",\n  },\n  {\n    id: 15,\n    front: tiger,\n    back: \"Tiger\",\n  },\n];\n\nfunction ImageList() {\n  return (\n    <React.Fragment>\n      <CardDeck>\n        {masterImgList.map((image, index) => (\n          <FlashCard front={image.front} back={image.back} key={index} />\n        ))}\n      </CardDeck>\n    </React.Fragment>\n  );\n}\n\nexport default ImageList;\n","import React from \"react\";\nimport Header from \"./components/header\";\n//import Market from \"./components/MarketControl\";\n// import CardList from \"./components/CardList\";\n// import './index.css';\nimport \"./App.css\";\n\n\n\nimport ImageList from \"./components/ImageList\";\n\nfunction App() {\n  return (\n    <React.Fragment>\n      <div className=\"container\">\n        <Header />\n\n        <ImageList />\n      </div>\n    </React.Fragment>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}